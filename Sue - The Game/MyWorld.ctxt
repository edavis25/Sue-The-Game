#BlueJ class context
comment0.params=
comment0.target=MyWorld()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ MyWorld.\ Paint\ order\ sets\ the\ layering\ order\ when\ objects\ are\ on\ top\ of\ one\ another.\r\n\ \r\n
comment1.params=
comment1.target=void\ prepareWorld()
comment1.text=\r\n\ Method\ for\ World\ Preperation\r\n
comment2.params=
comment2.target=int\ dogLocationX()
comment2.text=\r\n\ 2\ methods\ for\ finding\ dog's\ location.\r\n
comment3.params=
comment3.target=int\ dogLocationY()
comment4.params=
comment4.target=int\ dogCatcherLocationX()
comment4.text=\r\n\ 2\ methods\ for\ finding\ dog\ catcher's\ location.\r\n
comment5.params=
comment5.target=int\ dogCatcherLocationY()
comment6.params=
comment6.target=Hydrant\ getNorthwestHydrant()
comment6.text=\r\n\ 3\ Methods\ used\ to\ return\ the\ different\ Hydrants\ as\ references.\ This\ is\ used\ so\ I\ can\ call\ the\ peedOn()\ method\ (located\ in\ the\ Hydrant\ class)\r\n\ from\ other\ Actors.\ This\ will\ return\ a\ specific\ instance\ of\ a\ Hydrant\ which\ can\ then\ be\ used\ to\ call\ the\ peedOn()\ method\ which\ will\ ultimately\r\n\ return\ a\ true/false\ result.\ The\ Dog\ Catcher\ needs\ to\ check\ if\ each\ hydrant\ has\ been\ peed\ on\ by\ taking\ this\ reference\ and\ then\ calling\r\n\ the\ method\ inside\ of\ the\ Hydrant\ for\ the\ boolean\ answer.\ Three\ seperate\ methods\ grouped\ together.\r\n
comment7.params=
comment7.target=Hydrant\ getNortheastHydrant()
comment8.params=
comment8.target=Hydrant\ getSoutheastHydrant()
comment9.params=
comment9.target=Sue\ getDogReference()
comment9.text=\r\n\ Method\ used\ to\ return\ Sue\ (the\ dog)\ as\ a\ reference.\r\n
numComments=10
