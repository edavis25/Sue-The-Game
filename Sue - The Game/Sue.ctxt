#BlueJ class context
comment0.params=
comment0.target=Sue()
comment0.text=\r\n\ Constructor.\r\n
comment1.params=
comment1.target=void\ act()
comment1.text=\r\n\ Act\ -\ do\ whatever\ the\ Sue\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment2.params=
comment2.target=void\ checkKeyPress()
comment2.text=\r\n\ checkKeyPress\ -\ According\ to\ the\ key\ pressed,\ move\ the\ dog\ in\ the\ correct\ direction\ or\ trigger\ one\ of\ the\ actions.\r\n\ Keys\ used\ (in\ order\ they\ appear)\:\ (1)"LEFT"\ \ (2)"RIGHT"\ \ (3)"UP"\ \ (4)"DOWN"\ (5)"P"\r\n
comment3.params=
comment3.target=void\ walkAnimation()
comment3.text=\r\n\ walkAnimation\ \ -\ Creates\ the\ innovative\ animation\ of\ the\ dog.\ Increments\ the\ animationCounter\ to\ have\ Sue\ rotate\ a\ little\ to\ the\r\n\ \ \ \ \ \ left\ and\ right\ depending\ on\ the\ value\ of\ the\ counter.\ There\ are\ 3\ resting\ spots\:\ 1)\ level,\ 2)\ left\ turn,\ 3)\ right\ turn.\r\n\ \ \ \ \ \ The\ dog\ simply\ shifts\ its\ angle\ depending\ on\ the\ value\ of\ the\ counter\ which\ will\ be\ incremented\ when\ a\ key\ is\ pressed.\r\n
comment4.params=
comment4.target=void\ checkTouching()
comment4.text=\r\n\ checkTouching\ -\ Check\ if\ Sue\ is\ touching\ the\ different\ actors\ in\ the\ world.\r\n
comment5.params=
comment5.target=void\ peeOnHydrant()
comment5.text=\r\n\ \ peeOnHydrant\ \ -\ Method\ for\ peeing\ on\ the\ hydrant.\ Called\ from\ the\ checkTouching\ method.\r\n
comment6.params=
comment6.target=void\ setAlreadyPeedFalse()
comment6.text=\r\n\ setAlreadyPeedFalse\ \ -\ This\ method\ is\ called\ by\ the\ Dog\ Catcher's\ "cleanPee"\ method.\ The\ method\ is\ used\ when\ the\ dog\ catcher\ is\ finished\r\n\ cleaning\ the\ pee\ and\ allows\ the\ alreadyPeed\ boolean\ here\ to\ be\ changed\ from\ the\ Dog\ Catcher\ class.\r\n
comment7.params=
comment7.target=void\ cooldown()
comment7.text=\r\n\ \ actionCooldown\ \ -\ Prevents\ action\ spamming.\ Action\ cooldown\ begins\ at\ its\ maximum\ and\ remains\ there\ until\ an\ action\r\n\ \ \ \ \ \ is\ used.\ When\ an\ action\ is\ used,\ the\ cooldown\ is\ set\ to\ 0\ and\ will\ then\ begin\ to\ increase.\ Whenever\ an\ action\ is\ attempted,\r\n\ \ \ \ \ \ the\ cooldown\ will\ be\ tested\ and\ action\ will\ only\ be\ completed\ if\ cooldown\ is\ at\ its\ maximum\ value.\r\n
numComments=8
